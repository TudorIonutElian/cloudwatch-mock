name: Deploy infrastructure from Vultr Instance (Terraform Plan & Apply)

# Trigger deployment only on push to main branch
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Terraform plan
    runs-on: ubuntu-latest
    permissions: write-all
    env: 
      RUN_NUMBER: ${{ github.run_number }}
    steps:
      - name: Login to Vultr Instance and run terraform plan
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VULTR_INSTANCE_IP }}
          username: ${{ secrets.VULTR_INSTANCE_USER }}
          key: ${{ secrets.VULTR_INSTANCE_KEY }}
          script: |
            if [ -f "/path/to/your/file" ]; then
              runners/database_exporter_variables.sh
            fi
            cp runners/database_exporter_variables_example.sh runners/database_exporter_variables.sh
            sed -i 's|DATABASE_HOST_TO_BE_REPLACED|'"${{ secrets.DATABASE_HOST }}"'|g' runners/database_exporter_variables.sh
            sed -i 's|DATABASE_USERNAME_TO_BE_REPLACED|'"${{ secrets.DATABASE_USERNAME }}"'|g' runners/database_exporter_variables.sh
            sed -i 's|DATABASE_PASSWORD_TO_BE_REPLACED|'"${{ secrets.DATABASE_PASSWORD }}"'|g' runners/database_exporter_variables.sh
            sed -i 's|DATABASE_PORT_TO_BE_REPLACED|'"${{ secrets.DATABASE_PORT }}"'|g' runners/database_exporter_variables.sh

            cat runners/database_exporter_variables.sh

      - name: Add the infratag
        uses: actions/github-script@v7
        with:
          result-encoding: string
          retries: 1
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/vInfraVer-${{github.run_number}}',
              sha: context.sha
            })
